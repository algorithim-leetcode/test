# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'corretto'
        
    # application.properties 파일 생성
    - name: Make application.properties
      run: |
        cd ./src/main/resources
        touch ./application.properties
        echo "spring.application.name=truffle" >> ./application.properties
        echo "server.port=8080" >> ./application.properties
        echo "spring.profiles.include=db" >> ./application.properties
        echo "spring.jpa.hibernate.ddl-auto=update" >> ./application.properties
        echo "spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect" >> ./application.properties
        echo "spring.jpa.show-sql=true" >> ./application.properties
        echo "spring.jpa.properties.hibernate.format_sql=true" >> ./application.properties
        echo "spring.mvc.problemdetails.enabled=true" >> ./application.properties
    
    # application-db.properties 파일 생성
    - name: Make application-db.properties
      run: |
        cd ./src/main/resources
        touch ./application-db.properties
        echo "spring.datasource.url=jdbc:mysql://localhost:3306/truffle?useSSL=false&allowPublicKeyRetrieval=true" >> ./application-db.properties
        echo "spring.datasource.username=truffle_user" >> ./application-db.properties
        echo "spring.datasource.password=${{ secrets.MYSQL_PASSWORD }}" >> ./application-db.properties
        echo "spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver" >> ./application-db.properties
      shell: bash

      # application-test.properties 파일 생성 (H2 설정)
    - name: Create application-test.properties
      run: |
        mkdir -p ./src/test/resources
        touch ./src/test/resources/application-test.properties
        echo "spring.datasource.driver-class-name=org.h2.Driver" >> ./src/test/resources/application-test.properties
        echo "spring.datasource.url=jdbc:h2:mem:db;DB_CLOSE_DELAY=-1" >> ./src/test/resources/application-test.properties
        echo "spring.datasource.username=truffle_test" >> ./src/test/resources/application-test.properties
        echo "spring.datasource.password=${{ secrets.MYSQL_PASSWORD }}" >> ./src/test/resources/application-test.properties
        echo "spring.jpa.generate-ddl=true" >> ./src/test/resources/application-test.properties
        echo "spring.jpa.hibernate.ddl-auto=create-drop" >> ./src/test/resources/application-test.properties
        echo "spring.jpa.open-in-view=false" >> ./src/test/resources/application-test.properties
        echo "spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect" >> ./src/test/resources/application-test.properties

      # MySQL 설정
    - name: Setup MySQL
      uses: mirromutth/mysql-action@v1.1
      with:
        mysql database: 'truffle'
        mysql user: 'truffle_user'
        mysql password: ${{ secrets.MYSQL_PASSWORD }}
          
    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
      
    - name: Grant execute permission for Gradle Wrapper
      run: chmod +x ./gradlew
      
    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Run tests
      run: SPRING_PROFILES_ACTIVE="test" ./gradlew test --rerun-tasks --stacktrace --info --debug

    - name: run build
      run: ./gradlew clean build -x test


    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
    #   with:
    #     gradle-version: '8.9'
    #
    # - name: Build with Gradle 8.9
    #   run: gradle build

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'corretto'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
